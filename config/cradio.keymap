#include <behaviors.dtsi>
#include <dt-bindings/zmk/bt.h>
#include <dt-bindings/zmk/ext_power.h>
#include <dt-bindings/zmk/keys.h>
#include <dt-bindings/zmk/keys.h>

/ {
    combos {
        compatible = "zmk,combos";

        exit_gaming {
            bindings = <&tog 7>;
            key-positions = <4 24 14>;
            require-prior-idle-ms = <2000>;
            layers = <7>;
        };

        ctrl_shift {
            bindings = <&ctrl_shift>;
            key-positions = <13 12>;
            layers = <1>;
        };

        ctrl_alt {
            bindings = <&crl_alt>;
            key-positions = <10 13>;
            layers = <1>;
        };

        ctrl_gui {
            bindings = <&ctrl_gui>;
            key-positions = <13 11>;
            layers = <1>;
        };

        shift_alt {
            bindings = <&shift_alt>;
            key-positions = <12 10>;
            layers = <1>;
        };

        shift_gui {
            bindings = <&shift_gui>;
            key-positions = <12 11>;
            layers = <1>;
        };

        alt_gui {
            bindings = <&alt_gui>;
            key-positions = <10 11>;
            layers = <1>;
        };

        ctrl_shift_alt {
            bindings = <&ctrl_shift_alt>;
            key-positions = <13 12 10>;
            layers = <1>;
        };

        to_qwerty {
            bindings = <&to 6>;
            key-positions = <0 1 2 3 4>;
            layers = <0>;
            require-prior-idle-ms = <2000>;
        };

        to_dvorak {
            bindings = <&to 0>;
            key-positions = <0 1 2 3 4>;
            layers = <6>;
            require-prior-idle-ms = <2000>;
        };

        symbols {
            bindings = <&sl 2>;
            key-positions = <31 32>;
            layers = <0 5 6 7 3>;
        };

        symbols_ext {
            bindings = <&sl 3>;
            key-positions = <31 32>;
            layers = <2>;
        };
    };

    macros {
        ctrl_shift: ctrl_shift {
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            bindings = <&sk LEFT_CONTROL &sk LEFT_SHIFT>;
            label = "CTRL_SHIFT";
        };

        crl_alt: crl_alt {
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            bindings = <&sk LEFT_CONTROL &sk LEFT_ALT>;
            label = "CRL_ALT";
        };

        ctrl_gui: ctrl_gui {
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            bindings = <&sk LEFT_CONTROL &sk LEFT_GUI>;
            label = "CTRL_GUI";
        };

        shift_alt: shift_alt {
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            bindings = <&sk LEFT_SHIFT &sk LEFT_ALT>;
            label = "SHIFT_ALT";
        };

        shift_gui: shift_gui {
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            bindings = <&sk LEFT_SHIFT &sk LEFT_GUI>;
            label = "SHIFT_GUI";
        };

        alt_gui: alt_gui {
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            bindings = <&sk LEFT_ALT &sk LEFT_GUI>;
            label = "ALT_GUI";
        };

        ctrl_shift_alt: ctrl_shift_alt {
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            bindings = <&sk LEFT_CONTROL &sk LEFT_SHIFT &sk LEFT_ALT>;
            label = "CTRL_SHIFT_ALT";
        };
    };

    keymap {
        compatible = "zmk,keymap";

        dvorak {
            bindings = <
&kp ENTER    &kp TAB  &kp BACKSPACE  &kp P  &kp Y         &kp F      &kp G  &kp C  &kp R  &kp L
&kp A        &kp O    &kp E          &kp U  &kp I         &kp D      &kp H  &kp T  &kp N  &kp S
&key_repeat  &kp Q    &kp J          &kp K  &kp X         &kp B      &kp M  &kp W  &kp V  &kp Z
                                     &sl 1  &kp ESCAPE    &kp SPACE  &sl 2
            >;

            label = "dvorak";
        };

        modifiers {
            bindings = <
&none         &none         &tog 5          &tog 4            &tog 8           &sl 8  &none           &none  &none  &none
&sk LEFT_ALT  &sk LEFT_GUI  &sk LEFT_SHIFT  &sk LEFT_CONTROL  &sk RIGHT_ALT    &none  &kt LEFT_SHIFT  &sl 4  &sl 5  &none
&none         &none         &none           &none             &to 7            &none  &none           &none  &none  &none
                                            &none             &none            &none  &none
            >;

            label = "modifiers";
        };

        symbols {
            bindings = <
&kp N7            &kp N5    &kp N3                 &kp N1           &kp N9        &kp N0       &kp N2             &kp N4     &kp N6         &kp N8
&kp LESS_THAN     &kp LBKT  &kp LEFT_PARENTHESIS   &kp LEFT_BRACE   &kp CARET     &kp PERCENT  &kp APOS           &kp DOT    &kp SEMICOLON  &kp ASTERISK
&kp GREATER_THAN  &kp RBKT  &kp RIGHT_PARENTHESIS  &kp RIGHT_BRACE  &kp DOLLAR    &kp AT       &kp DOUBLE_QUOTES  &kp COMMA  &kp COLON      &kp SLASH
                                                   &none            &none         &none        &sl 3
            >;

            label = "symbols";
        };

        symbols_ext {
            bindings = <
&none  &none          &none           &none            &none            &none     &none        &none      &none         &none
&none  &kp AMPERSAND  &kp UNDERSCORE  &kp QUESTION     &kp GRAVE        &kp HASH  &kp EQUAL    &kp PLUS   &kp ASTERISK  &none
&none  &kp PIPE       &kp TILDE       &kp EXCLAMATION  &kp BACKSLASH    &none     &kp PERCENT  &kp MINUS  &kp SLASH     &none
                                      &none            &none            &none     &sl 2
            >;

            label = "symbols_ext";
        };

        navigation {
            bindings = <
&kp F1  &kp F2   &kp F3   &kp F4   &kp PRINTSCREEN    &kp BACKSPACE  &kp K_COPY  &kp K_PASTE    &kp K_CUT    &kp DELETE
&kp F5  &kp F6   &kp F7   &kp F8   &kp SCROLLLOCK     &kp TAB        &kp LEFT    &kp DOWN       &kp UP       &kp RIGHT
&kp F9  &kp F10  &kp F11  &kp F12  &kp C_PAUSE        &kp ENTER      &kp HOME    &kp PAGE_DOWN  &kp PAGE_UP  &kp END
                          &tog 4   &trans             &trans         &trans
            >;

            label = "navigation";
        };

        numpad {
            bindings = <
&kp TAB  &kp ENTER  &kp BACKSPACE  &none      &none             &kp FSLH   &kp NUMBER_7  &kp NUMBER_8  &kp NUMBER_9  &kp MINUS
&none    &none      &none          &kp EQUAL  &kp KP_NUMLOCK    &kp STAR   &kp NUMBER_4  &kp NUMBER_5  &kp NUMBER_6  &kp PLUS
&none    &none      &none          &none      &none             &kp COMMA  &kp NUMBER_1  &kp NUMBER_2  &kp NUMBER_3  &kp DOT
                                   &tog 5     &kp ESCAPE        &kp SPACE  &kp NUMBER_0
            >;

            label = "numpad";
        };

        qwerty {
            bindings = <
&kp Q  &kp W  &kp E  &kp R  &kp T         &kp Y      &kp U  &kp I          &kp O    &kp P
&kp A  &kp S  &kp D  &kp F  &kp G         &kp H      &kp J  &kp K          &kp L    &key_repeat
&kp Z  &kp X  &kp C  &kp V  &kp B         &kp N      &kp M  &kp BACKSPACE  &kp TAB  &kp ENTER
                     &sl 1  &kp ESCAPE    &kp SPACE  &sl 2
            >;
        };

        gaming {
            bindings = <
&kp ESC    &kp Q  &kp W  &kp E     &kp R        &kp T   &kp Y  &kp U  &kp I  &kp O
&kp LSHFT  &kp A  &kp S  &kp D     &kp F        &kp G   &kp H  &kp J  &kp K  &kp L
&kp LCTRL  &kp Z  &kp X  &kp C     &kp V        &kp B   &kp N  &kp M  &kp P  &kp FSLH
                         &kp LALT  &kp SPACE    &tog 5  &to 0
            >;

            label = "gaming";
        };

        special {
            bindings = <
&none       &kp K_MUTE      &kp C_VOLUME_DOWN  &kp C_VOLUME_UP  &bootloader    &bootloader   &none         &none         &ext_power EP_TOG  &bt BT_CLR
&kp K_STOP  &kp K_PREVIOUS  &kp K_PLAY_PAUSE   &kp K_NEXT       &sys_reset     &sys_reset    &none         &none         &none              &none
&none       &none           &none              &none            &none          &bt BT_SEL 0  &bt BT_SEL 1  &bt BT_SEL 2  &bt BT_SEL 3       &bt BT_SEL 4
                                               &tog 8           &trans         &trans        &trans
            >;

            label = "special";
        };
    };
};
