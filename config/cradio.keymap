#include <behaviors.dtsi>
#include <dt-bindings/zmk/bt.h>
#include <dt-bindings/zmk/ext_power.h>
#include <dt-bindings/zmk/keys.h>
#include <dt-bindings/zmk/outputs.h>

&mt { tapping-term-ms = <500>; };

/ {
    combos {
        compatible = "zmk,combos";

        ctrl_shift {
            bindings = <&ctrl_shift>;
            key-positions = <13 12>;
            layers = <1>;
        };

        ctrl_alt {
            bindings = <&crl_alt>;
            key-positions = <10 13>;
            layers = <1>;
        };

        ctrl_gui {
            bindings = <&ctrl_gui>;
            key-positions = <13 11>;
            layers = <1>;
        };

        shift_alt {
            bindings = <&shift_alt>;
            key-positions = <12 10>;
            layers = <1>;
        };

        shift_gui {
            bindings = <&shift_gui>;
            key-positions = <12 11>;
            layers = <1>;
        };

        alt_gui {
            bindings = <&alt_gui>;
            key-positions = <10 11>;
            layers = <1>;
        };

        ctrl_shift_alt {
            bindings = <&ctrl_shift_alt>;
            key-positions = <13 12 10>;
            layers = <1>;
        };

        symbols {
            bindings = <&sl 3>;
            key-positions = <31 32>;
            layers = <0 2 6>;
        };

        soft_off_left {
            bindings = <&soft_off>;
            key-positions = <0 20>;
            layers = <0>;
            require-prior-idle-ms = <3000>;
            slow-release;
        };

        soft_off_right {
            bindings = <&soft_off>;
            key-positions = <9 29>;
            layers = <0>;
            require-prior-idle-ms = <3000>;
            slow-release;
        };
    };

    macros {
        ctrl_shift: ctrl_shift {
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            bindings = <&sk LEFT_CONTROL &sk LEFT_SHIFT>;
        };

        crl_alt: crl_alt {
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            bindings = <&sk LEFT_CONTROL &sk LEFT_ALT>;
        };

        ctrl_gui: ctrl_gui {
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            bindings = <&sk LEFT_CONTROL &sk LEFT_GUI>;
        };

        shift_alt: shift_alt {
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            bindings = <&sk LEFT_SHIFT &sk LEFT_ALT>;
        };

        shift_gui: shift_gui {
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            bindings = <&sk LEFT_SHIFT &sk LEFT_GUI>;
        };

        alt_gui: alt_gui {
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            bindings = <&sk LEFT_ALT &sk LEFT_GUI>;
        };

        ctrl_shift_alt: ctrl_shift_alt {
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            bindings = <&sk LEFT_CONTROL &sk LEFT_SHIFT &sk LEFT_ALT>;
        };
    };

    behaviors {
        mod_hold: mod_hold {
            compatible = "zmk,behavior-hold-tap";
            bindings = <&mo>, <&sl>;

            #binding-cells = <2>;
            tapping-term-ms = <200>;
            flavor = "tap-preferred";
        };

        hold_tap: hold_tap {
            compatible = "zmk,behavior-hold-tap";
            bindings = <&kp>, <&kp>;

            #binding-cells = <2>;
            tapping-term-ms = <100>;
            quick-tap-ms = <50>;
        };

        special_space: special_space {
            compatible = "zmk,behavior-hold-tap";
            bindings = <&mo>, <&kp>;

            #binding-cells = <2>;
            tapping-term-ms = <200>;
            quick-tap-ms = <100>;
        };
    };

    keymap {
        compatible = "zmk,keymap";

        dvorak {
            bindings = <
&kp ENTER       &kp TAB          &kp BACKSPACE     &kp P               &kp Y              &kp F                   &kp G               &kp C             &kp R            &kp L
&mt LEFT_ALT A  &mt LEFT_META O  &mt LEFT_SHIFT E  &mt LEFT_CONTROL U  &mt RIGHT_ALT I    &mt D RIGHT_ALT         &mt LEFT_CONTROL H  &mt LEFT_SHIFT T  &mt LEFT_META N  &mt LEFT_ALT S
&key_repeat     &kp Q            &kp J             &kp K               &kp X              &kp B                   &kp M               &kp W             &kp V            &kp Z
                                                   &mod_hold 1 1       &lt 2 ESCAPE       &special_space 3 SPACE  &mod_hold 3 3
            >;

            display-name = "dvorak";
        };

        modifiers {
            bindings = <
&none         &none         &caps_word      &none             &kp CAPSLOCK     &tog 5  &none  &tog 4  &tog 2  &none
&sk LEFT_ALT  &sk LEFT_GUI  &sk LEFT_SHIFT  &sk LEFT_CONTROL  &sk RIGHT_ALT    &sl 5   &none  &sl 4   &sl 2   &to 6
&none         &none         &none           &none             &none            &none   &none  &none   &none   &none
                                            &none             &none            &none   &none
            >;

            display-name = "modifiers";
        };

        numpad {
            bindings = <
&kp TAB  &kp ENTER  &kp BACKSPACE  &none      &none             &kp FSLH   &kp NUMBER_7  &kp NUMBER_8  &kp NUMBER_9  &kp MINUS
&none    &none      &none          &kp EQUAL  &kp KP_NUMLOCK    &kp STAR   &kp NUMBER_4  &kp NUMBER_5  &kp NUMBER_6  &kp PLUS
&none    &none      &none          &none      &none             &kp COMMA  &kp NUMBER_1  &kp NUMBER_2  &kp NUMBER_3  &kp DOT
                                   &tog 2     &kp ESCAPE        &kp SPACE  &kp NUMBER_0
            >;

            display-name = "numpad";
        };

        symbols {
            bindings = <
&none             &none     &none                  &none            &kp BACKSLASH    &kp NUMBER_0  &kp GRAVE          &kp QUESTION   &kp EXCLAMATION  &kp HASH
&kp LESS_THAN     &kp LBKT  &kp LEFT_PARENTHESIS   &kp LEFT_BRACE   &kp CARET        &kp PERCENT   &kp APOS           &kp SEMICOLON  &kp UNDERSCORE   &kp AMPERSAND
&kp GREATER_THAN  &kp RBKT  &kp RIGHT_PARENTHESIS  &kp RIGHT_BRACE  &kp DOLLAR       &kp AT_SIGN   &kp DOUBLE_QUOTES  &kp COLON      &kp TILDE        &kp PIPE
                                                   &none            &none            &none         &none
            >;

            display-name = "symbols";
        };

        navigation {
            bindings = <
&kp F1  &kp F2   &kp F3   &kp F4   &kp PRINTSCREEN    &kp K_COPY   &kp LC(UP_ARROW)  &kp LC(DOWN_ARROW)  &kp LC(UP_ARROW)  &kp LC(RIGHT_ARROW)
&kp F5  &kp F6   &kp F7   &kp F8   &kp SCROLLLOCK     &kp K_PASTE  &kp LEFT          &kp DOWN            &kp UP            &kp RIGHT
&kp F9  &kp F10  &kp F11  &kp F12  &kp C_PAUSE        &kp K_CUT    &kp HOME          &kp PAGE_DOWN       &kp PAGE_UP       &kp END
                          &tog 4   &trans             &trans       &trans
            >;

            display-name = "navigation";
        };

        special {
            bindings = <
&none         &kp K_MUTE      &kp C_VOLUME_DOWN  &kp C_VOLUME_UP    &bootloader    &bootloader   &none         &none         &none         &bt BT_CLR
&kp K_STOP    &kp K_PREVIOUS  &kp K_PLAY_PAUSE   &kp K_NEXT         &sys_reset     &bt BT_SEL 0  &bt BT_SEL 1  &bt BT_SEL 2  &bt BT_SEL 3  &bt BT_SEL 4
&out OUT_USB  &out OUT_BLE    &out OUT_TOG       &ext_power EP_TOG  &none          &sys_reset    &none         &none         &none         &none
                                                 &tog 5             &trans         &trans        &trans
            >;

            display-name = "special";
        };

        gaming {
            bindings = <
&kp ESC    &kp Q  &kp W  &kp E     &kp R        &kp T          &kp Y   &kp U  &kp I  &kp O
&kp LSHFT  &kp A  &kp S  &kp D     &kp F        &kp G          &kp H   &kp J  &kp K  &kp L
&kp LCTRL  &kp Z  &kp X  &kp C     &kp V        &kp B          &kp N   &kp M  &kp P  &kp FSLH
                         &kp LALT  &kp SPACE    &mod_hold 0 0  &tog 2
            >;

            display-name = "gaming";
        };
    };
};
